/*
 * This file is generated by jOOQ.
 */
package uk.ac.ebi.fg.annotare2.autosubs.jooq.tables.records;


import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;

import uk.ac.ebi.fg.annotare2.autosubs.jooq.tables.Users;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> implements Record9<Integer, String, String, String, String, LocalDateTime, LocalDateTime, LocalDateTime, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>ae_autosubs.users.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>ae_autosubs.users.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>ae_autosubs.users.login</code>.
     */
    public void setLogin(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>ae_autosubs.users.login</code>.
     */
    public String getLogin() {
        return (String) get(1);
    }

    /**
     * Setter for <code>ae_autosubs.users.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>ae_autosubs.users.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>ae_autosubs.users.password</code>.
     */
    public void setPassword(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>ae_autosubs.users.password</code>.
     */
    public String getPassword() {
        return (String) get(3);
    }

    /**
     * Setter for <code>ae_autosubs.users.email</code>.
     */
    public void setEmail(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>ae_autosubs.users.email</code>.
     */
    public String getEmail() {
        return (String) get(4);
    }

    /**
     * Setter for <code>ae_autosubs.users.modified_at</code>.
     */
    public void setModifiedAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>ae_autosubs.users.modified_at</code>.
     */
    public LocalDateTime getModifiedAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>ae_autosubs.users.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>ae_autosubs.users.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>ae_autosubs.users.access</code>.
     */
    public void setAccess(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>ae_autosubs.users.access</code>.
     */
    public LocalDateTime getAccess() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>ae_autosubs.users.is_deleted</code>.
     */
    public void setIsDeleted(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>ae_autosubs.users.is_deleted</code>.
     */
    public Integer getIsDeleted() {
        return (Integer) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, String, String, String, String, LocalDateTime, LocalDateTime, LocalDateTime, Integer> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Integer, String, String, String, String, LocalDateTime, LocalDateTime, LocalDateTime, Integer> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Users.USERS.ID;
    }

    @Override
    public Field<String> field2() {
        return Users.USERS.LOGIN;
    }

    @Override
    public Field<String> field3() {
        return Users.USERS.NAME;
    }

    @Override
    public Field<String> field4() {
        return Users.USERS.PASSWORD;
    }

    @Override
    public Field<String> field5() {
        return Users.USERS.EMAIL;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Users.USERS.MODIFIED_AT;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Users.USERS.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return Users.USERS.ACCESS;
    }

    @Override
    public Field<Integer> field9() {
        return Users.USERS.IS_DELETED;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getLogin();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getPassword();
    }

    @Override
    public String component5() {
        return getEmail();
    }

    @Override
    public LocalDateTime component6() {
        return getModifiedAt();
    }

    @Override
    public LocalDateTime component7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component8() {
        return getAccess();
    }

    @Override
    public Integer component9() {
        return getIsDeleted();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getLogin();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getPassword();
    }

    @Override
    public String value5() {
        return getEmail();
    }

    @Override
    public LocalDateTime value6() {
        return getModifiedAt();
    }

    @Override
    public LocalDateTime value7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value8() {
        return getAccess();
    }

    @Override
    public Integer value9() {
        return getIsDeleted();
    }

    @Override
    public UsersRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public UsersRecord value2(String value) {
        setLogin(value);
        return this;
    }

    @Override
    public UsersRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public UsersRecord value4(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UsersRecord value5(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UsersRecord value6(LocalDateTime value) {
        setModifiedAt(value);
        return this;
    }

    @Override
    public UsersRecord value7(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public UsersRecord value8(LocalDateTime value) {
        setAccess(value);
        return this;
    }

    @Override
    public UsersRecord value9(Integer value) {
        setIsDeleted(value);
        return this;
    }

    @Override
    public UsersRecord values(Integer value1, String value2, String value3, String value4, String value5, LocalDateTime value6, LocalDateTime value7, LocalDateTime value8, Integer value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(Integer id, String login, String name, String password, String email, LocalDateTime modifiedAt, LocalDateTime createdAt, LocalDateTime access, Integer isDeleted) {
        super(Users.USERS);

        setId(id);
        setLogin(login);
        setName(name);
        setPassword(password);
        setEmail(email);
        setModifiedAt(modifiedAt);
        setCreatedAt(createdAt);
        setAccess(access);
        setIsDeleted(isDeleted);
    }
}
